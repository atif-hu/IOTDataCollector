// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitoringStationAPI.Database;

#nullable disable

namespace MonitoringStationAPI.Migrations
{
    [DbContext(typeof(IoTDataCollectorDBContext))]
    partial class MonitoringStationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("MonitoringStationAPI.Models.Sensors", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataCollectionInterval")
                        .HasColumnType("TEXT");

                    b.Property<int>("SensorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SensorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("MonitoringStationAPI.Models.SensorsData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Alert")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataCollectionInterval")
                        .HasColumnType("TEXT");

                    b.Property<double>("ParameterValue")
                        .HasColumnType("REAL");

                    b.Property<int>("SensorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SensorName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("SensorsData");
                });
#pragma warning restore 612, 618
        }
    }
}
